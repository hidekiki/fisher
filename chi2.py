import numpy as np
from fishfun import P, qmin, qmax, Fshape, T

def chi2_coeff_p((constant,cb20,cb20sq,cb10,cb10b20,cfnl,cfnlb20,cfnlb10,cfnlb10b20)):
    return np.asarray((((constant**2,2.*cb20*constant,cb20**2 + 2.*cb20sq*constant,2.*cb20*cb20sq,cb20sq**2),(2.*cb10*constant,2.*cb10*cb20 + 2.*cb10b20*constant,2.*cb10b20*cb20 + 2.*cb10*cb20sq,2.*cb10b20*cb20sq,0.),(cb10**2,2.*cb10*cb10b20,cb10b20**2,0.,0.)),((2.*cfnl*constant,2.*cb20*cfnl + 2.*cfnlb20*constant,2.*cb20sq*cfnl + 2.*cb20*cfnlb20,2.*cb20sq*cfnlb20,0.),(2.*cb10*cfnl + 2.*cfnlb10*constant,2.*cb10b20*cfnl + 2.*cb20*cfnlb10 + 2.*cb10*cfnlb20 + 2.*cfnlb10b20*constant,2.*cb20sq*cfnlb10 + 2.*cb20*cfnlb10b20 + 2.*cb10b20*cfnlb20,2.*cb20sq*cfnlb10b20,0.),(2.*cb10*cfnlb10,2.*cb10b20*cfnlb10 + 2.*cb10*cfnlb10b20,2.*cb10b20*cfnlb10b20,0.,0.)),((cfnl**2,2.*cfnl*cfnlb20,cfnlb20**2,0.,0.),(2.*cfnl*cfnlb10,2.*cfnl*cfnlb10b20 + 2.*cfnlb10*cfnlb20,2.*cfnlb10b20*cfnlb20,0.,0.),(cfnlb10**2,2.*cfnlb10*cfnlb10b20,cfnlb10b20**2,0.,0.))))

def chi2_coeff_b((constant,cb20,cb10,cb10b20,cb10sq,cb10sqb20,cb10cu,cfnl,cfnlb20,cfnlb20sq,cfnlb10,cfnlb10b20,cfnlb10b20sq,cfnlb10sq,cfnlb10sqb20,cfnlb10cu)):
    return np.asarray((((constant**2,2.*cb20*constant,cb20**2,0.,0.),(2.*cb10*constant,2.*cb10*cb20 + 2.*cb10b20*constant,2.*cb10b20*cb20,0.,0.),(cb10**2 + 2.*cb10sq*constant,2.*cb10*cb10b20 + 2.*cb10sq*cb20 + 2.*cb10sqb20*constant,cb10b20**2 + 2.*cb10sqb20*cb20,0.,0.),(2.*cb10*cb10sq + 2.*cb10cu*constant,2.*cb10b20*cb10sq + 2.*cb10*cb10sqb20 + 2.*cb10cu*cb20,2.*cb10b20*cb10sqb20,0.,0.),(2.*cb10*cb10cu + cb10sq**2,2.*cb10b20*cb10cu + 2.*cb10sq*cb10sqb20,cb10sqb20**2,0.,0.),(2.*cb10cu*cb10sq,2.*cb10cu*cb10sqb20,0.,0.,0.),(cb10cu**2,0.,0.,0.,0.)),((2.*cfnl*constant,2.*cb20*cfnl + 2.*cfnlb20*constant,2.*cb20*cfnlb20 + 2.*cfnlb20sq*constant,2.*cb20*cfnlb20sq,0.),(2.*cb10*cfnl + 2.*cfnlb10*constant,2.*cb10b20*cfnl + 2.*cb20*cfnlb10 + 2.*cb10*cfnlb20 + 2.*cfnlb10b20*constant,2.*cb20*cfnlb10b20 + 2.*cb10b20*cfnlb20 + 2.*cb10*cfnlb20sq + 2.*cfnlb10b20sq*constant,2.*cb20*cfnlb10b20sq + 2.*cb10b20*cfnlb20sq,0.),(2.*cb10sq*cfnl + 2.*cb10*cfnlb10 + 2.*cfnlb10sq*constant,2.*cb10sqb20*cfnl + 2.*cb10b20*cfnlb10 + 2.*cb10*cfnlb10b20 + 2.*cb20*cfnlb10sq + 2.*cb10sq*cfnlb20 + 2.*cfnlb10sqb20*constant,2.*cb10b20*cfnlb10b20 + 2.*cb10*cfnlb10b20sq + 2.*cb20*cfnlb10sqb20 + 2.*cb10sqb20*cfnlb20 + 2.*cb10sq*cfnlb20sq,2.*cb10b20*cfnlb10b20sq + 2.*cb10sqb20*cfnlb20sq,0.),(2.*cb10cu*cfnl + 2.*cb10sq*cfnlb10 + 2.*cb10*cfnlb10sq + 2.*cfnlb10cu*constant,2.*cb10sqb20*cfnlb10 + 2.*cb10sq*cfnlb10b20 + 2.*cb20*cfnlb10cu + 2.*cb10b20*cfnlb10sq + 2.*cb10*cfnlb10sqb20 + 2.*cb10cu*cfnlb20,2.*cb10sqb20*cfnlb10b20 + 2.*cb10sq*cfnlb10b20sq + 2.*cb10b20*cfnlb10sqb20 + 2.*cb10cu*cfnlb20sq,2.*cb10sqb20*cfnlb10b20sq,0.),(2.*cb10cu*cfnlb10 + 2.*cb10*cfnlb10cu + 2.*cb10sq*cfnlb10sq,2.*cb10cu*cfnlb10b20 + 2.*cb10b20*cfnlb10cu + 2.*cb10sqb20*cfnlb10sq + 2.*cb10sq*cfnlb10sqb20,2.*cb10cu*cfnlb10b20sq + 2.*cb10sqb20*cfnlb10sqb20,0.,0.),(2.*cb10sq*cfnlb10cu + 2.*cb10cu*cfnlb10sq,2.*cb10sqb20*cfnlb10cu + 2.*cb10cu*cfnlb10sqb20,0.,0.,0.),(2.*cb10cu*cfnlb10cu,0.,0.,0.,0.)),((cfnl**2,2.*cfnl*cfnlb20,cfnlb20**2 + 2.*cfnl*cfnlb20sq,2.*cfnlb20*cfnlb20sq,cfnlb20sq**2),(2.*cfnl*cfnlb10,2.*cfnl*cfnlb10b20 + 2.*cfnlb10*cfnlb20,2.*cfnl*cfnlb10b20sq + 2.*cfnlb10b20*cfnlb20 + 2.*cfnlb10*cfnlb20sq,2.*cfnlb10b20sq*cfnlb20 + 2.*cfnlb10b20*cfnlb20sq,2.*cfnlb10b20sq*cfnlb20sq),(cfnlb10**2 + 2.*cfnl*cfnlb10sq,2.*cfnlb10*cfnlb10b20 + 2.*cfnl*cfnlb10sqb20 + 2.*cfnlb10sq*cfnlb20,cfnlb10b20**2 + 2.*cfnlb10*cfnlb10b20sq + 2.*cfnlb10sqb20*cfnlb20 + 2.*cfnlb10sq*cfnlb20sq,2.*cfnlb10b20*cfnlb10b20sq + 2.*cfnlb10sqb20*cfnlb20sq,cfnlb10b20sq**2),(2.*cfnl*cfnlb10cu + 2.*cfnlb10*cfnlb10sq,2.*cfnlb10b20*cfnlb10sq + 2.*cfnlb10*cfnlb10sqb20 + 2.*cfnlb10cu*cfnlb20,2.*cfnlb10b20sq*cfnlb10sq + 2.*cfnlb10b20*cfnlb10sqb20 + 2.*cfnlb10cu*cfnlb20sq,2.*cfnlb10b20sq*cfnlb10sqb20,0.),(2.*cfnlb10*cfnlb10cu + cfnlb10sq**2,2.*cfnlb10b20*cfnlb10cu + 2.*cfnlb10sq*cfnlb10sqb20,2.*cfnlb10b20sq*cfnlb10cu + cfnlb10sqb20**2,0.,0.),(2.*cfnlb10cu*cfnlb10sq,2.*cfnlb10cu*cfnlb10sqb20,0.,0.,0.),(cfnlb10cu**2,0.,0.,0.,0.))))


###### coefficients of power spectrum chi2 ######
def chi2_delta_p(k,q,x,(fnlfid ,b10fid, b20fid, b01fid, b11fid, b02fid, chi1fid, w10fid, sigfid, Rfid),(powerfnl,powerb1,powerb2)):
    return np.asarray(((((0.002551020408163265*((-196.*P(k))/(qmax - 1.*qmin) + (196.*(1. + b10fid + b01fid*k**2)**2*P(k))/(qmax - 1.*qmin) - (0.91189065278104*k**4*q**2*P(q)*P(np.sqrt(k**2 + q**2 - 2.*k*q*x)))/(2.718281828459045**(2.*q*Rfid**2*(q - 1.*k*x))*(k**2 + q**2 - 2.*k*q*x)**2) - (4.255489712978187*k**5*q*x*P(q)*P(np.sqrt(k**2 + q**2 - 2.*k*q*x)))/(2.718281828459045**(2.*q*Rfid**2*(q - 1.*k*x))*(k**2 + q**2 - 2.*k*q*x)**2) - (4.9647379984745506*k**6*x**2*P(q)*P(np.sqrt(k**2 + q**2 - 2.*k*q*x)))/(2.718281828459045**(2.*q*Rfid**2*(q - 1.*k*x))*(k**2 + q**2 - 2.*k*q*x)**2) + (6.0792710185402665*k**4*q**2*x**2*P(q)*P(np.sqrt(k**2 + q**2 - 2.*k*q*x)))/(2.718281828459045**(2.*q*Rfid**2*(q - 1.*k*x))*(k**2 + q**2 - 2.*k*q*x)**2) + (14.184965709927289*k**5*q*x**3*P(q)*P(np.sqrt(k**2 + q**2 - 2.*k*q*x)))/(2.718281828459045**(2.*q*Rfid**2*(q - 1.*k*x))*(k**2 + q**2 - 2.*k*q*x)**2) - (10.132118364233778*k**4*q**2*x**4*P(q)*P(np.sqrt(k**2 + q**2 - 2.*k*q*x)))/(2.718281828459045**(2.*q*Rfid**2*(q - 1.*k*x))*(k**2 + q**2 - 2.*k*q*x)**2) + (0.10132118364233778*(7.*q**3*(b20fid + q**2*(2.*b11fid + 2.*chi1fid + q**2*(b02fid + 2.*w10fid))) + 7.*b01fid*k**5*x - 14.*k*q**2*(b20fid + q**2*(3.*b11fid + 3.*chi1fid + 2.*q**2*(b02fid + 2.*w10fid)))*x + 7.*k**4*q*(b11fid + b02fid*q**2 - 1.*q**2*w10fid - 4.*b01fid*x**2 + 3.*q**2*w10fid*x**2) + k**2*q*(3. + 7.*b20fid + 7.*b01fid*q**2 + 21.*b11fid*q**2 + 14.*chi1fid*q**2 + 14.*b02fid*q**4 + 7.*q**4*w10fid - 10.*x**2 - 28.*b01fid*q**2*x**2 + 28.*b11fid*q**2*x**2 + 28.*chi1fid*q**2*x**2 + 28.*b02fid*q**4*x**2 + 77.*q**4*w10fid*x**2 + b10fid*(7. - 14.*x**2)) + 7.*k**3*x*(1. + b10fid - 4.*b11fid*q**2 - 2.*chi1fid*q**2 - 4.*b02fid*q**4 - 2.*q**4*w10fid - 6.*q**4*w10fid*x**2 + 2.*b01fid*q**2*(1. + 2.*x**2)))**2*P(q)*P(np.sqrt(k**2 + q**2 - 2.*k*q*x)))/(2.718281828459045**(2.*q*Rfid**2*(q - 1.*k*x))*(k**2 + q**2 - 2.*k*q*x)**2)))/2.718281828459045**(0.3333333333333333*k**2*(3.*Rfid**2 + sigfid**2)),(-0.0036186137015120634*2.718281828459045**(-0.3333333333333333*k**2*(3.*Rfid**2 + sigfid**2) - 2.*q*Rfid**2*(q - 1.*k*x))*k**2*q*(7.*k*x + q*(3. - 10.*x**2))*P(q)*P(np.sqrt(k**2 + q**2 - 2.*k*q*x)))/(k**2 + q**2 - 2.*k*q*x),-0.012665147955292222*2.718281828459045**(-0.3333333333333333*k**2*(3.*Rfid**2 + sigfid**2) - 2.*q*Rfid**2*(q - 1.*k*x))*q**2*P(q)*P(np.sqrt(k**2 + q**2 - 2.*k*q*x))),((0.0036186137015120634*2.718281828459045**(-0.3333333333333333*k**2*(3.*Rfid**2 + sigfid**2) - 2.*q*Rfid**2*(q - 1.*k*x))*(-276.348923230502*2.718281828459045**(2.*q*Rfid**2*(q - 1.*k*x))*(k**2 + q**2 - 2.*k*q*x)**2*P(k) - 1.*k**4*(qmax - 1.*qmin)*(7.*k**2*x**2 + 2.*k*q*x*(5. - 12.*x**2) + q**2*(3. - 16.*x**2 + 20.*x**4))*P(q)*P(np.sqrt(k**2 + q**2 - 2.*k*q*x))))/((qmax - 1.*qmin)*(k**2 + q**2 - 2.*k*q*x)**2),(-0.025330295910584444*2.718281828459045**(-0.3333333333333333*k**2*(3.*Rfid**2 + sigfid**2) - 2.*q*Rfid**2*(q - 1.*k*x))*k**2*q*(q + k*x - 2.*q*x**2)*P(q)*P(np.sqrt(k**2 + q**2 - 2.*k*q*x)))/(k**2 + q**2 - 2.*k*q*x),0.)),(((-0.0036186137015120634*2.718281828459045**(-0.3333333333333333*k**2*(3.*Rfid**2 + sigfid**2) + q*Rfid**2*(-1.*q + k*x))*k**2*q*(7.*k*x + q*(3. - 10.*x**2))*Fshape(q,np.sqrt(k**2 + q**2 - 2.*k*q*x),k))/(k**2 + q**2 - 2.*k*q*x),-0.025330295910584444*2.718281828459045**(-0.3333333333333333*k**2*(3.*Rfid**2 + sigfid**2) + q*Rfid**2*(-1.*q + k*x))*q**2*Fshape(q,np.sqrt(k**2 + q**2 - 2.*k*q*x),k),0.),((-0.007237227403024127*2.718281828459045**(-0.3333333333333333*k**2*(3.*Rfid**2 + sigfid**2) + q*Rfid**2*(-1.*q + k*x))*k**2*q*(7.*k*x + q*(5. - 12.*x**2))*Fshape(q,np.sqrt(k**2 + q**2 - 2.*k*q*x),k))/(k**2 + q**2 - 2.*k*q*x),-0.025330295910584444*2.718281828459045**(-0.3333333333333333*k**2*(3.*Rfid**2 + sigfid**2) + q*Rfid**2*(-1.*q + k*x))*q**2*Fshape(q,np.sqrt(k**2 + q**2 - 2.*k*q*x),k),0.))))[powerfnl][powerb1][powerb2]



###### coefficients of bispectrum chi2 ######
def chi2_delta_b(k,q,x,(fnlfid ,b10fid, b20fid, b01fid, b11fid, b02fid, chi1fid, w10fid, sigfid, Rfid),(powerfnl,powerb1,powerb2)):
    return np.asarray(((((0.017857142857142856*((-20.*P(k[0])*P(k[1]))/2.718281828459045**(1.*(k[0]**2 + k[1]**2)*Rfid**2) + (10.*k[0]**2*P(k[0])*P(k[1]))/(2.718281828459045**(1.*(k[0]**2 + k[1]**2)*Rfid**2)*k[1]**2) - (6.*k[2]**2*P(k[0])*P(k[1]))/(2.718281828459045**(1.*(k[0]**2 + k[1]**2)*Rfid**2)*k[1]**2) + (10.*(k[1]**2 - 1.*k[2]**2)*P(k[0])*P(k[1]))/(2.718281828459045**(1.*(k[0]**2 + k[1]**2)*Rfid**2)*k[0]**2) + (4.*k[2]**2*(k[1]**2 - 1.*k[2]**2)*P(k[0])*P(k[1]))/(2.718281828459045**(1.*(k[0]**2 + k[1]**2)*Rfid**2)*k[0]**2*k[1]**2) + ((1. + b10fid + b01fid*k[0]**2)*(1. + b10fid + b01fid*k[1]**2)*(-2.*(k[1]**2 - 1.*k[2]**2)*((5. + 7.*b10fid)*k[1]**2 + 7.*b01fid*k[1]**4 + 2.*k[2]**2) - 7.*k[0]**6*(2.*b01fid - 3.*k[1]**2*w10fid) - 2.*k[0]**4*(5. + 7.*b10fid - 14.*b11fid*k[1]**2 - 14.*chi1fid*k[1]**2 - 14.*b02fid*k[1]**4 - 7.*b01fid*(k[1]**2 + k[2]**2) - 7.*k[1]**4*w10fid + 21.*k[1]**2*k[2]**2*w10fid) + k[0]**2*(2.*(3. + 7.*b10fid)*k[2]**2 + 21.*k[1]**6*w10fid + 14.*k[1]**4*(b01fid + 2.*b11fid + 2.*chi1fid - 3.*k[2]**2*w10fid) + k[1]**2*(20. + 28.*b10fid + 28.*b20fid - 28.*chi1fid*k[2]**2 + 21.*k[2]**4*w10fid)))*P(k[0])*P(k[1]))/(2.718281828459045**(1.*(k[0]**2 + k[1]**2)*Rfid**2)*k[0]**2*k[1]**2) - (20.*P(k[0])*P(k[2]))/2.718281828459045**(1.*(k[0]**2 + k[2]**2)*Rfid**2) + (10.*k[0]**2*P(k[0])*P(k[2]))/(2.718281828459045**(1.*(k[0]**2 + k[2]**2)*Rfid**2)*k[2]**2) - (6.*k[1]**2*P(k[0])*P(k[2]))/(2.718281828459045**(1.*(k[0]**2 + k[2]**2)*Rfid**2)*k[2]**2) + (10.*(-1.*k[1]**2 + k[2]**2)*P(k[0])*P(k[2]))/(2.718281828459045**(1.*(k[0]**2 + k[2]**2)*Rfid**2)*k[0]**2) + (4.*k[1]**2*(-1.*k[1]**2 + k[2]**2)*P(k[0])*P(k[2]))/(2.718281828459045**(1.*(k[0]**2 + k[2]**2)*Rfid**2)*k[0]**2*k[2]**2) + ((1. + b10fid + b01fid*k[0]**2)*(1. + b10fid + b01fid*k[2]**2)*(2.*(k[1]**2 - 1.*k[2]**2)*(2.*k[1]**2 + k[2]**2*(5. + 7.*b10fid + 7.*b01fid*k[2]**2)) - 7.*k[0]**6*(2.*b01fid - 3.*k[2]**2*w10fid) - 2.*k[0]**4*(5. + 7.*b10fid - 14.*b11fid*k[2]**2 - 14.*chi1fid*k[2]**2 - 14.*b02fid*k[2]**4 - 7.*b01fid*(k[1]**2 + k[2]**2) + 21.*k[1]**2*k[2]**2*w10fid - 7.*k[2]**4*w10fid) + k[0]**2*(21.*k[1]**4*k[2]**2*w10fid + 2.*k[1]**2*(3. + 7.*b10fid - 14.*chi1fid*k[2]**2 - 21.*k[2]**4*w10fid) + k[2]**2*(20. + 28.*b10fid + 28.*b20fid + 14.*b01fid*k[2]**2 + 28.*b11fid*k[2]**2 + 28.*chi1fid*k[2]**2 + 21.*k[2]**4*w10fid)))*P(k[0])*P(k[2]))/(2.718281828459045**(1.*(k[0]**2 + k[2]**2)*Rfid**2)*k[0]**2*k[2]**2) - (20.*P(k[1])*P(k[2]))/2.718281828459045**(1.*(k[1]**2 + k[2]**2)*Rfid**2) - (4.*k[0]**4*P(k[1])*P(k[2]))/(2.718281828459045**(1.*(k[1]**2 + k[2]**2)*Rfid**2)*k[1]**2*k[2]**2) + (10.*k[1]**2*P(k[1])*P(k[2]))/(2.718281828459045**(1.*(k[1]**2 + k[2]**2)*Rfid**2)*k[2]**2) + (10.*k[2]**2*P(k[1])*P(k[2]))/(2.718281828459045**(1.*(k[1]**2 + k[2]**2)*Rfid**2)*k[1]**2) - (6.*k[0]**2*(k[1]**2 + k[2]**2)*P(k[1])*P(k[2]))/(2.718281828459045**(1.*(k[1]**2 + k[2]**2)*Rfid**2)*k[1]**2*k[2]**2) + ((1. + b10fid + b01fid*k[1]**2)*(1. + b10fid + b01fid*k[2]**2)*(-2.*k[2]**4*(5. + 7.*b10fid + 7.*b01fid*k[2]**2) - 7.*k[1]**6*(2.*b01fid - 3.*k[2]**2*w10fid) + k[0]**4*(4. + 21.*k[1]**2*k[2]**2*w10fid) + 2.*k[1]**4*(-5. - 7.*b10fid + 7.*b01fid*k[2]**2 + 14.*b11fid*k[2]**2 + 14.*chi1fid*k[2]**2 + 14.*b02fid*k[2]**4 + 7.*k[2]**4*w10fid) + k[1]**2*k[2]**2*(20. + 28.*b10fid + 28.*b20fid + 14.*b01fid*k[2]**2 + 28.*b11fid*k[2]**2 + 28.*chi1fid*k[2]**2 + 21.*k[2]**4*w10fid) + 2.*k[0]**2*(k[2]**2*(3. + 7.*b10fid + 7.*b01fid*k[2]**2) + 7.*k[1]**4*(b01fid - 3.*k[2]**2*w10fid) + k[1]**2*(3. + 7.*b10fid - 14.*chi1fid*k[2]**2 - 21.*k[2]**4*w10fid)))*P(k[1])*P(k[2]))/(2.718281828459045**(1.*(k[1]**2 + k[2]**2)*Rfid**2)*k[1]**2*k[2]**2)))/(2.718281828459045**(0.16666666666666666*(k[0]**2 + k[1]**2 + k[2]**2)*sigfid**2)*(qmax - 1.*qmin)),(-0.5*(2.718281828459045**(k[0]**2*Rfid**2)*P(k[1])*P(k[2]) + P(k[0])*(2.718281828459045**(k[2]**2*Rfid**2)*P(k[1]) + 2.718281828459045**(k[1]**2*Rfid**2)*P(k[2]))))/(2.718281828459045**(0.16666666666666666*(k[0]**2 + k[1]**2 + k[2]**2)*(6.*Rfid**2 + sigfid**2))*(qmax - 1.*qmin)),0.),((0.03571428571428571*(-1.*2.718281828459045**(k[0]**2*Rfid**2)*k[0]**2*(4.*k[0]**4 - 17.*(k[1]**2 - 1.*k[2]**2)**2 + 13.*k[0]**2*(k[1]**2 + k[2]**2))*P(k[1])*P(k[2]) - 1.*P(k[0])*(2.718281828459045**(k[2]**2*Rfid**2)*k[2]**2*(-17.*k[0]**4 - 17.*k[1]**4 + 13.*k[1]**2*k[2]**2 + 4.*k[2]**4 + k[0]**2*(34.*k[1]**2 + 13.*k[2]**2))*P(k[1]) + 2.718281828459045**(k[1]**2*Rfid**2)*k[1]**2*(-17.*k[0]**4 + 4.*k[1]**4 + 13.*k[1]**2*k[2]**2 - 17.*k[2]**4 + k[0]**2*(13.*k[1]**2 + 34.*k[2]**2))*P(k[2]))))/(2.718281828459045**(0.16666666666666666*(k[0]**2 + k[1]**2 + k[2]**2)*(6.*Rfid**2 + sigfid**2))*k[0]**2*k[1]**2*k[2]**2*(qmax - 1.*qmin)),((-1.*P(k[1])*P(k[2]))/2.718281828459045**(1.*(k[1]**2 + k[2]**2)*Rfid**2) + P(k[0])*((-1.*P(k[1]))/2.718281828459045**(1.*(k[0]**2 + k[1]**2)*Rfid**2) - (1.*P(k[2]))/2.718281828459045**(1.*(k[0]**2 + k[2]**2)*Rfid**2)))/(2.718281828459045**(0.16666666666666666*(k[0]**2 + k[1]**2 + k[2]**2)*sigfid**2)*(qmax - 1.*qmin)),0.),((0.03571428571428571*(-1.*2.718281828459045**(k[0]**2*Rfid**2)*k[0]**2*(2.*k[0]**4 - 19.*(k[1]**2 - 1.*k[2]**2)**2 + 17.*k[0]**2*(k[1]**2 + k[2]**2))*P(k[1])*P(k[2]) - 1.*P(k[0])*(2.718281828459045**(k[2]**2*Rfid**2)*k[2]**2*(-19.*k[0]**4 - 19.*k[1]**4 + 17.*k[1]**2*k[2]**2 + 2.*k[2]**4 + k[0]**2*(38.*k[1]**2 + 17.*k[2]**2))*P(k[1]) + 2.718281828459045**(k[1]**2*Rfid**2)*k[1]**2*(-19.*k[0]**4 + 2.*k[1]**4 + 17.*k[1]**2*k[2]**2 - 19.*k[2]**4 + k[0]**2*(17.*k[1]**2 + 38.*k[2]**2))*P(k[2]))))/(2.718281828459045**(0.16666666666666666*(k[0]**2 + k[1]**2 + k[2]**2)*(6.*Rfid**2 + sigfid**2))*k[0]**2*k[1]**2*k[2]**2*(qmax - 1.*qmin)),(-0.5*(2.718281828459045**(k[0]**2*Rfid**2)*P(k[1])*P(k[2]) + P(k[0])*(2.718281828459045**(k[2]**2*Rfid**2)*P(k[1]) + 2.718281828459045**(k[1]**2*Rfid**2)*P(k[2]))))/(2.718281828459045**(0.16666666666666666*(k[0]**2 + k[1]**2 + k[2]**2)*(6.*Rfid**2 + sigfid**2))*(qmax - 1.*qmin)),0.),((0.25*(-1.*2.718281828459045**(k[0]**2*Rfid**2)*k[0]**2*(-1.*(k[1]**2 - 1.*k[2]**2)**2 + k[0]**2*(k[1]**2 + k[2]**2))*P(k[1])*P(k[2]) - 1.*P(k[0])*(2.718281828459045**(k[2]**2*Rfid**2)*k[2]**2*(-1.*k[0]**4 - 1.*k[1]**4 + k[1]**2*k[2]**2 + k[0]**2*(2.*k[1]**2 + k[2]**2))*P(k[1]) + 2.718281828459045**(k[1]**2*Rfid**2)*k[1]**2*(-1.*k[0]**4 + k[2]**2*(k[1]**2 - 1.*k[2]**2) + k[0]**2*(k[1]**2 + 2.*k[2]**2))*P(k[2]))))/(2.718281828459045**(0.16666666666666666*(k[0]**2 + k[1]**2 + k[2]**2)*(6.*Rfid**2 + sigfid**2))*k[0]**2*k[1]**2*k[2]**2*(qmax - 1.*qmin)),0.,0.)),(((0.0012755102040816326*((-392.*Fshape(k[0],k[1],k[2]))/(2.718281828459045**(0.5*(k[0]**2 + k[1]**2 + k[2]**2)*Rfid**2)*(qmax - 1.*qmin)) + 0.10132118364233778*q*(((-7.*k[1]*x + q*(-3. + 10.*x**2))*Fshape(k[1],q,np.sqrt(k[1]**2 + q**2 - 2.*k[1]*q*x))*(2.718281828459045**(k[2]**2*Rfid**2)*k[2]**2*(-5.*k[0]**4 - 5.*k[1]**4 + 3.*k[1]**2*k[2]**2 + 2.*k[2]**4 + k[0]**2*(10.*k[1]**2 + 3.*k[2]**2))*P(k[0]) + 2.718281828459045**(k[0]**2*Rfid**2)*k[0]**2*(2.*k[0]**4 - 5.*(k[1]**2 - 1.*k[2]**2)**2 + 3.*k[0]**2*(k[1]**2 + k[2]**2))*P(k[2])))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[1]**2 + k[2]**2 + q**2 - 1.*k[1]*q*x))*k[0]**2*k[2]**2*(k[1]**2 + q**2 - 2.*k[1]*q*x)) - (1.*(((7.*k[2]*x + q*(3. - 10.*x**2))*Fshape(k[2],q,np.sqrt(k[2]**2 + q**2 - 2.*k[2]*q*x))*(2.718281828459045**(k[1]**2*Rfid**2)*k[1]**2*(-5.*k[0]**4 + 2.*k[1]**4 + 3.*k[1]**2*k[2]**2 - 5.*k[2]**4 + k[0]**2*(3.*k[1]**2 + 10.*k[2]**2))*P(k[0]) + 2.718281828459045**(k[0]**2*Rfid**2)*k[0]**2*(2.*k[0]**4 - 5.*(k[1]**2 - 1.*k[2]**2)**2 + 3.*k[0]**2*(k[1]**2 + k[2]**2))*P(k[1])))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[1]**2 + k[2]**2 + q**2 - 1.*k[2]*q*x))*k[0]**2*(k[2]**2 + q**2 - 2.*k[2]*q*x)) + ((7.*k[0]*x + q*(3. - 10.*x**2))*Fshape(k[0],q,np.sqrt(k[0]**2 + q**2 - 2.*k[0]*q*x))*(2.718281828459045**(k[2]**2*Rfid**2)*k[2]**2*(-5.*k[0]**4 - 5.*k[1]**4 + 3.*k[1]**2*k[2]**2 + 2.*k[2]**4 + k[0]**2*(10.*k[1]**2 + 3.*k[2]**2))*P(k[1]) + 2.718281828459045**(k[1]**2*Rfid**2)*k[1]**2*(-5.*k[0]**4 + 2.*k[1]**4 + 3.*k[1]**2*k[2]**2 - 5.*k[2]**4 + k[0]**2*(3.*k[1]**2 + 10.*k[2]**2))*P(k[2])))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[1]**2 + k[2]**2 + q**2 - 1.*k[0]*q*x))*k[2]**2*(k[0]**2 + q**2 - 2.*k[0]*q*x))))/k[1]**2)))/2.718281828459045**(0.16666666666666666*(k[0]**2 + k[1]**2 + k[2]**2)*sigfid**2),(0.0009046534253780159*q*((-1.*Fshape(k[2],q,np.sqrt(k[2]**2 + q**2 - 2.*k[2]*q*x))*(2.718281828459045**(k[1]**2*Rfid**2)*k[1]**2*(-5.*k[0]**4*q*(k[2]**2 + q**2 - 2.*k[2]*q*x) + (2.*k[1]**4 + 3.*k[1]**2*k[2]**2 - 5.*k[2]**4)*q*(k[2]**2 + q**2 - 2.*k[2]*q*x) + k[0]**2*(3.*k[1]**2*q*(k[2]**2 + q**2 - 2.*k[2]*q*x) + 2.*k[2]**2*(5.*q**3 + 7.*k[2]**3*x - 10.*k[2]*q**2*x + 2.*k[2]**2*q*(4. - 5.*x**2))))*P(k[0]) + 2.718281828459045**(k[0]**2*Rfid**2)*k[0]**2*(2.*k[0]**4*q*(k[2]**2 + q**2 - 2.*k[2]*q*x) - 5.*k[1]**4*q*(k[2]**2 + q**2 - 2.*k[2]*q*x) - 5.*k[2]**4*q*(k[2]**2 + q**2 - 2.*k[2]*q*x) + 3.*k[0]**2*(k[1]**2 + k[2]**2)*q*(k[2]**2 + q**2 - 2.*k[2]*q*x) + 2.*k[1]**2*k[2]**2*(5.*q**3 + 7.*k[2]**3*x - 10.*k[2]*q**2*x + 2.*k[2]**2*q*(4. - 5.*x**2)))*P(k[1])))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[1]**2 + k[2]**2 + q**2 - 1.*k[2]*q*x))*(k[2]**2 + q**2 - 2.*k[2]*q*x)) - (1.*Fshape(k[0],q,np.sqrt(k[0]**2 + q**2 - 2.*k[0]*q*x))*(2.718281828459045**(k[2]**2*Rfid**2)*k[2]**2*(-5.*k[0]**6*q + (-5.*k[1]**4 + 3.*k[1]**2*k[2]**2 + 2.*k[2]**4)*q**3 + k[0]**2*q*(-5.*k[1]**4 + 2.*k[2]**4 + 3.*k[2]**2*q**2 + k[1]**2*(3.*k[2]**2 + 10.*q**2)) - 2.*k[0]**3*(10.*k[1]**2 + 3.*k[2]**2)*q**2*x + 2.*k[0]*(5.*k[1]**4 - 3.*k[1]**2*k[2]**2 - 2.*k[2]**4)*q**2*x + 2.*k[0]**5*(7.*k[1]**2 + 5.*q**2)*x + k[0]**4*q*(3.*k[2]**2 - 5.*q**2 - 4.*k[1]**2*(-4. + 5.*x**2)))*P(k[1]) + 2.718281828459045**(k[1]**2*Rfid**2)*k[1]**2*(-5.*k[0]**6*q + (2.*k[1]**4 + 3.*k[1]**2*k[2]**2 - 5.*k[2]**4)*q**3 + k[0]**2*q*(2.*k[1]**4 - 5.*k[2]**2*(k[2]**2 - 2.*q**2) + 3.*k[1]**2*(k[2]**2 + q**2)) - 2.*k[0]**3*(3.*k[1]**2 + 10.*k[2]**2)*q**2*x - 2.*k[0]*(2.*k[1]**4 + 3.*k[1]**2*k[2]**2 - 5.*k[2]**4)*q**2*x + 2.*k[0]**5*(7.*k[2]**2 + 5.*q**2)*x + k[0]**4*q*(3.*k[1]**2 - 5.*q**2 - 4.*k[2]**2*(-4. + 5.*x**2)))*P(k[2])))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[1]**2 + k[2]**2 + q**2 - 1.*k[0]*q*x))*(k[0]**2 + q**2 - 2.*k[0]*q*x)) + (Fshape(k[1],q,np.sqrt(k[1]**2 + q**2 - 2.*k[1]*q*x))*(-1.*2.718281828459045**(Rfid**2*(k[1]**2 + k[2]**2 + q**2 - 1.*k[1]*q*x))*k[2]**2*(-5.*k[0]**4*q*(k[1]**2 + q**2 - 2.*k[1]*q*x) - 1.*(5.*k[1]**4 - 3.*k[1]**2*k[2]**2 - 2.*k[2]**4)*q*(k[1]**2 + q**2 - 2.*k[1]*q*x) + k[0]**2*(3.*k[2]**2*q**3 + k[1]**2*(3.*k[2]**2*q + 10.*q**3) + 14.*k[1]**5*x - 20.*k[1]**3*q**2*x - 6.*k[1]*k[2]**2*q**2*x - 4.*k[1]**4*q*(-4. + 5.*x**2)))*P(k[0]) - 1.*2.718281828459045**(Rfid**2*(k[0]**2 + k[1]**2 + q**2 - 1.*k[1]*q*x))*k[0]**2*(-5.*k[1]**6*q - 5.*k[2]**4*q**3 - 5.*k[1]**2*k[2]**2*q*(k[2]**2 - 2.*q**2) - 20.*k[1]**3*k[2]**2*q**2*x + 10.*k[1]*k[2]**4*q**2*x + 2.*k[1]**5*(7.*k[2]**2 + 5.*q**2)*x + 2.*k[0]**4*q*(k[1]**2 + q**2 - 2.*k[1]*q*x) + 3.*k[0]**2*(k[1]**2 + k[2]**2)*q*(k[1]**2 + q**2 - 2.*k[1]*q*x) + k[1]**4*(-5.*q**3 - 4.*k[2]**2*q*(-4. + 5.*x**2)))*P(k[2])))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + 2.*k[1]**2 + k[2]**2 + 2.*q**2 - 2.*k[1]*q*x))*(k[1]**2 + q**2 - 2.*k[1]*q*x))))/(2.718281828459045**(0.16666666666666666*(k[0]**2 + k[1]**2 + k[2]**2)*sigfid**2)*k[0]**2*k[1]**2*k[2]**2),-0.012665147955292222*2.718281828459045**(0.16666666666666666*(-6.*k[2]**2*Rfid**2 - 6.*q**2*Rfid**2 - 1.*k[2]**2*sigfid**2 - 1.*k[0]**2*(6.*Rfid**2 + sigfid**2) - 1.*k[1]**2*(6.*Rfid**2 + sigfid**2)))*q**2*(2.718281828459045**(k[2]*q*Rfid**2*x)*Fshape(k[2],q,np.sqrt(k[2]**2 + q**2 - 2.*k[2]*q*x))*(2.718281828459045**(k[1]**2*Rfid**2)*P(k[0]) + 2.718281828459045**(k[0]**2*Rfid**2)*P(k[1])) + 2.718281828459045**(k[1]*q*Rfid**2*x)*Fshape(k[1],q,np.sqrt(k[1]**2 + q**2 - 2.*k[1]*q*x))*(2.718281828459045**(k[2]**2*Rfid**2)*P(k[0]) + 2.718281828459045**(k[0]**2*Rfid**2)*P(k[2])) + 2.718281828459045**(k[0]*q*Rfid**2*x)*Fshape(k[0],q,np.sqrt(k[0]**2 + q**2 - 2.*k[0]*q*x))*(2.718281828459045**(k[2]**2*Rfid**2)*P(k[1]) + 2.718281828459045**(k[1]**2*Rfid**2)*P(k[2])))),((0.0012755102040816326*((-1176.*Fshape(k[0],k[1],k[2]))/(2.718281828459045**(0.5*(k[0]**2 + k[1]**2 + k[2]**2)*Rfid**2)*(qmax - 1.*qmin)) + 0.10132118364233778*q*((-1.*Fshape(k[1],q,np.sqrt(k[1]**2 + q**2 - 2.*k[1]*q*x))*(2.718281828459045**(k[2]**2*Rfid**2)*k[2]**2*(k[0]**2*(238.*k[1]**3*x + 91.*k[1]*k[2]**2*x + 2.*k[1]**2*q*(71. - 190.*x**2) + k[2]**2*q*(51. - 142.*x**2)) - 1.*(k[1]**2 - 1.*k[2]**2)*(119.*k[1]**3*x + 28.*k[1]*k[2]**2*x + k[1]**2*q*(71. - 190.*x**2) + 4.*k[2]**2*q*(5. - 12.*x**2)) + k[0]**4*(-119.*k[1]*x + q*(-71. + 190.*x**2)))*P(k[0]) + 2.718281828459045**(k[0]**2*Rfid**2)*k[0]**2*(-1.*(k[1]**2 - 1.*k[2]**2)**2*(119.*k[1]*x + q*(71. - 190.*x**2)) + k[0]**2*(k[1]**2 + k[2]**2)*(91.*k[1]*x + q*(51. - 142.*x**2)) + 4.*k[0]**4*(7.*k[1]*x + q*(5. - 12.*x**2)))*P(k[2])))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[1]**2 + k[2]**2 + q**2 - 1.*k[1]*q*x))*k[0]**2*k[2]**2*(k[1]**2 + q**2 - 2.*k[1]*q*x)) - (1.*((Fshape(k[2],q,np.sqrt(k[2]**2 + q**2 - 2.*k[2]*q*x))*(2.718281828459045**(k[1]**2*Rfid**2)*k[1]**2*(k[0]**4*(-119.*k[2]*x + q*(-71. + 190.*x**2)) + k[0]**2*(2.*k[2]**2*(71.*q + 119.*k[2]*x - 190.*q*x**2) + k[1]**2*(51.*q + 91.*k[2]*x - 142.*q*x**2)) + (k[1]**2 - 1.*k[2]**2)*(k[2]**2*(71.*q + 119.*k[2]*x - 190.*q*x**2) + 4.*k[1]**2*(5.*q + 7.*k[2]*x - 12.*q*x**2)))*P(k[0]) + 2.718281828459045**(k[0]**2*Rfid**2)*k[0]**2*(k[0]**2*(k[1]**2 + k[2]**2)*(91.*k[2]*x + q*(51. - 142.*x**2)) + 4.*k[0]**4*(7.*k[2]*x + q*(5. - 12.*x**2)) + (k[1]**2 - 1.*k[2]**2)**2*(-119.*k[2]*x + q*(-71. + 190.*x**2)))*P(k[1])))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[1]**2 + k[2]**2 + q**2 - 1.*k[2]*q*x))*k[0]**2*(k[2]**2 + q**2 - 2.*k[2]*q*x)) + (Fshape(k[0],q,np.sqrt(k[0]**2 + q**2 - 2.*k[0]*q*x))*(2.718281828459045**(k[2]**2*Rfid**2)*k[2]**2*(-119.*k[0]**5*x + 7.*k[0]**3*(34.*k[1]**2 + 13.*k[2]**2)*x + 7.*k[0]*(-17.*k[1]**4 + 13.*k[1]**2*k[2]**2 + 4.*k[2]**4)*x + k[0]**4*q*(-71. + 190.*x**2) + k[0]**2*q*(k[1]**2*(142. - 380.*x**2) + k[2]**2*(51. - 142.*x**2)) + (k[1]**2 - 1.*k[2]**2)*q*(4.*k[2]**2*(-5. + 12.*x**2) + k[1]**2*(-71. + 190.*x**2)))*P(k[1]) + 2.718281828459045**(k[1]**2*Rfid**2)*k[1]**2*(-119.*k[0]**5*x + 7.*k[0]**3*(13.*k[1]**2 + 34.*k[2]**2)*x + 7.*k[0]*(4.*k[1]**4 + 13.*k[1]**2*k[2]**2 - 17.*k[2]**4)*x + k[0]**4*q*(-71. + 190.*x**2) + k[0]**2*q*(2.*k[2]**2*(71. - 190.*x**2) + k[1]**2*(51. - 142.*x**2)) - 1.*(k[1]**2 - 1.*k[2]**2)*q*(4.*k[1]**2*(-5. + 12.*x**2) + k[2]**2*(-71. + 190.*x**2)))*P(k[2])))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[1]**2 + k[2]**2 + q**2 - 1.*k[0]*q*x))*k[2]**2*(k[0]**2 + q**2 - 2.*k[0]*q*x))))/k[1]**2)))/2.718281828459045**(0.16666666666666666*(k[0]**2 + k[1]**2 + k[2]**2)*sigfid**2),(0.0018093068507560317*q*((-1.*Fshape(k[2],q,np.sqrt(k[2]**2 + q**2 - 2.*k[2]*q*x))*(2.718281828459045**(k[1]**2*Rfid**2)*k[1]**2*(-6.*k[0]**4*q*(k[2]**2 + q**2 - 2.*k[2]*q*x) + (k[1]**4 + 5.*k[1]**2*k[2]**2 - 6.*k[2]**4)*q*(k[2]**2 + q**2 - 2.*k[2]*q*x) + k[0]**2*(5.*k[1]**2*q*(k[2]**2 + q**2 - 2.*k[2]*q*x) + 2.*k[2]**2*(6.*q**3 + 7.*k[2]**3*x - 12.*k[2]*q**2*x + k[2]**2*q*(11. - 12.*x**2))))*P(k[0]) + 2.718281828459045**(k[0]**2*Rfid**2)*k[0]**2*(k[0]**4*q*(k[2]**2 + q**2 - 2.*k[2]*q*x) + 5.*k[0]**2*(k[1]**2 + k[2]**2)*q*(k[2]**2 + q**2 - 2.*k[2]*q*x) - 2.*(3.*k[1]**4*q*(k[2]**2 + q**2 - 2.*k[2]*q*x) + 3.*k[2]**4*q*(k[2]**2 + q**2 - 2.*k[2]*q*x) + k[1]**2*k[2]**2*(-6.*q**3 - 7.*k[2]**3*x + 12.*k[2]*q**2*x + k[2]**2*q*(-11. + 12.*x**2))))*P(k[1])))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[1]**2 + k[2]**2 + q**2 - 1.*k[2]*q*x))*(k[2]**2 + q**2 - 2.*k[2]*q*x)) - (1.*Fshape(k[0],q,np.sqrt(k[0]**2 + q**2 - 2.*k[0]*q*x))*(2.718281828459045**(k[2]**2*Rfid**2)*k[2]**2*(-6.*k[0]**6*q + (-6.*k[1]**4 + 5.*k[1]**2*k[2]**2 + k[2]**4)*q**3 + k[0]**2*q*(-6.*k[1]**4 + k[2]**4 + 5.*k[2]**2*q**2 + k[1]**2*(5.*k[2]**2 + 12.*q**2)) - 2.*k[0]**3*(12.*k[1]**2 + 5.*k[2]**2)*q**2*x + 2.*k[0]*(6.*k[1]**4 - 5.*k[1]**2*k[2]**2 - 1.*k[2]**4)*q**2*x + 2.*k[0]**5*(7.*k[1]**2 + 6.*q**2)*x + k[0]**4*q*(5.*k[2]**2 - 6.*q**2 + k[1]**2*(22. - 24.*x**2)))*P(k[1]) + 2.718281828459045**(k[1]**2*Rfid**2)*k[1]**2*(-6.*k[0]**6*q + (k[1]**4 + 5.*k[1]**2*k[2]**2 - 6.*k[2]**4)*q**3 + k[0]**2*q*(k[1]**4 - 6.*k[2]**2*(k[2]**2 - 2.*q**2) + 5.*k[1]**2*(k[2]**2 + q**2)) - 2.*k[0]**3*(5.*k[1]**2 + 12.*k[2]**2)*q**2*x - 2.*k[0]*(k[1]**4 + 5.*k[1]**2*k[2]**2 - 6.*k[2]**4)*q**2*x + 2.*k[0]**5*(7.*k[2]**2 + 6.*q**2)*x + k[0]**4*q*(5.*k[1]**2 - 6.*q**2 + k[2]**2*(22. - 24.*x**2)))*P(k[2])))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[1]**2 + k[2]**2 + q**2 - 1.*k[0]*q*x))*(k[0]**2 + q**2 - 2.*k[0]*q*x)) + (Fshape(k[1],q,np.sqrt(k[1]**2 + q**2 - 2.*k[1]*q*x))*(-1.*2.718281828459045**(Rfid**2*(k[1]**2 + k[2]**2 + q**2 - 1.*k[1]*q*x))*k[2]**2*(-6.*k[0]**4*q*(k[1]**2 + q**2 - 2.*k[1]*q*x) - 1.*(6.*k[1]**4 - 5.*k[1]**2*k[2]**2 - 1.*k[2]**4)*q*(k[1]**2 + q**2 - 2.*k[1]*q*x) + k[0]**2*(5.*k[2]**2*q**3 + k[1]**2*(5.*k[2]**2*q + 12.*q**3) + 14.*k[1]**5*x - 24.*k[1]**3*q**2*x - 10.*k[1]*k[2]**2*q**2*x + k[1]**4*q*(22. - 24.*x**2)))*P(k[0]) - 1.*2.718281828459045**(Rfid**2*(k[0]**2 + k[1]**2 + q**2 - 1.*k[1]*q*x))*k[0]**2*(k[0]**4*q*(k[1]**2 + q**2 - 2.*k[1]*q*x) + 5.*k[0]**2*(k[1]**2 + k[2]**2)*q*(k[1]**2 + q**2 - 2.*k[1]*q*x) - 2.*(3.*k[1]**6*q + 3.*k[2]**4*q**3 + 3.*k[1]**2*k[2]**2*q*(k[2]**2 - 2.*q**2) + 12.*k[1]**3*k[2]**2*q**2*x - 6.*k[1]*k[2]**4*q**2*x - 1.*k[1]**5*(7.*k[2]**2 + 6.*q**2)*x + k[1]**4*q*(3.*q**2 + k[2]**2*(-11. + 12.*x**2))))*P(k[2])))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + 2.*k[1]**2 + k[2]**2 + 2.*q**2 - 2.*k[1]*q*x))*(k[1]**2 + q**2 - 2.*k[1]*q*x))))/(2.718281828459045**(0.16666666666666666*(k[0]**2 + k[1]**2 + k[2]**2)*sigfid**2)*k[0]**2*k[1]**2*k[2]**2),-0.012665147955292222*2.718281828459045**(0.16666666666666666*(-6.*k[2]**2*Rfid**2 - 6.*q**2*Rfid**2 - 1.*k[2]**2*sigfid**2 - 1.*k[0]**2*(6.*Rfid**2 + sigfid**2) - 1.*k[1]**2*(6.*Rfid**2 + sigfid**2)))*q**2*(2.718281828459045**(k[2]*q*Rfid**2*x)*Fshape(k[2],q,np.sqrt(k[2]**2 + q**2 - 2.*k[2]*q*x))*(2.718281828459045**(k[1]**2*Rfid**2)*P(k[0]) + 2.718281828459045**(k[0]**2*Rfid**2)*P(k[1])) + 2.718281828459045**(k[1]*q*Rfid**2*x)*Fshape(k[1],q,np.sqrt(k[1]**2 + q**2 - 2.*k[1]*q*x))*(2.718281828459045**(k[2]**2*Rfid**2)*P(k[0]) + 2.718281828459045**(k[0]**2*Rfid**2)*P(k[2])) + 2.718281828459045**(k[0]*q*Rfid**2*x)*Fshape(k[0],q,np.sqrt(k[0]**2 + q**2 - 2.*k[0]*q*x))*(2.718281828459045**(k[2]**2*Rfid**2)*P(k[1]) + 2.718281828459045**(k[1]**2*Rfid**2)*P(k[2])))),((0.008928571428571428*((-168.*Fshape(k[0],k[1],k[2]))/(2.718281828459045**(0.5*(k[0]**2 + k[1]**2 + k[2]**2)*Rfid**2)*(qmax - 1.*qmin)) + 0.10132118364233778*q*((-1.*Fshape(k[1],q,np.sqrt(k[1]**2 + q**2 - 2.*k[1]*q*x))*(2.718281828459045**(k[2]**2*Rfid**2)*k[2]**2*(k[0]**2*(38.*k[1]**3*x + 17.*k[1]*k[2]**2*x + k[1]**2*q*(30. - 68.*x**2) + k[2]**2*q*(13. - 30.*x**2)) - 1.*(k[1]**2 - 1.*k[2]**2)*(19.*k[1]**3*x + 2.*k[1]*k[2]**2*x + k[1]**2*q*(15. - 34.*x**2) + 2.*k[2]**2*q*(1. - 2.*x**2)) + k[0]**4*(-19.*k[1]*x + q*(-15. + 34.*x**2)))*P(k[0]) + 2.718281828459045**(k[0]**2*Rfid**2)*k[0]**2*(2.*k[0]**4*(q + k[1]*x - 2.*q*x**2) - 1.*(k[1]**2 - 1.*k[2]**2)**2*(19.*k[1]*x + q*(15. - 34.*x**2)) + k[0]**2*(k[1]**2 + k[2]**2)*(17.*k[1]*x + q*(13. - 30.*x**2)))*P(k[2])))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[1]**2 + k[2]**2 + q**2 - 1.*k[1]*q*x))*k[0]**2*k[2]**2*(k[1]**2 + q**2 - 2.*k[1]*q*x)) - (1.*((Fshape(k[2],q,np.sqrt(k[2]**2 + q**2 - 2.*k[2]*q*x))*(2.718281828459045**(k[1]**2*Rfid**2)*k[1]**2*(k[0]**4*(-19.*k[2]*x + q*(-15. + 34.*x**2)) + k[0]**2*(2.*k[2]**2*(15.*q + 19.*k[2]*x - 34.*q*x**2) + k[1]**2*(13.*q + 17.*k[2]*x - 30.*q*x**2)) + (k[1]**2 - 1.*k[2]**2)*(k[2]**2*(15.*q + 19.*k[2]*x - 34.*q*x**2) + 2.*k[1]**2*(q + k[2]*x - 2.*q*x**2)))*P(k[0]) + 2.718281828459045**(k[0]**2*Rfid**2)*k[0]**2*(2.*k[0]**4*(q + k[2]*x - 2.*q*x**2) + k[0]**2*(k[1]**2 + k[2]**2)*(17.*k[2]*x + q*(13. - 30.*x**2)) + (k[1]**2 - 1.*k[2]**2)**2*(-19.*k[2]*x + q*(-15. + 34.*x**2)))*P(k[1])))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[1]**2 + k[2]**2 + q**2 - 1.*k[2]*q*x))*k[0]**2*(k[2]**2 + q**2 - 2.*k[2]*q*x)) + (Fshape(k[0],q,np.sqrt(k[0]**2 + q**2 - 2.*k[0]*q*x))*(2.718281828459045**(k[2]**2*Rfid**2)*k[2]**2*(-19.*k[0]**5*x + k[0]**3*(38.*k[1]**2 + 17.*k[2]**2)*x + k[0]*(-19.*k[1]**4 + 17.*k[1]**2*k[2]**2 + 2.*k[2]**4)*x + k[0]**4*q*(-15. + 34.*x**2) + k[0]**2*q*(k[1]**2*(30. - 68.*x**2) + k[2]**2*(13. - 30.*x**2)) + (k[1]**2 - 1.*k[2]**2)*q*(2.*k[2]**2*(-1. + 2.*x**2) + k[1]**2*(-15. + 34.*x**2)))*P(k[1]) + 2.718281828459045**(k[1]**2*Rfid**2)*k[1]**2*(-19.*k[0]**5*x + k[0]**3*(17.*k[1]**2 + 38.*k[2]**2)*x + k[0]*(2.*k[1]**4 + 17.*k[1]**2*k[2]**2 - 19.*k[2]**4)*x + k[0]**4*q*(-15. + 34.*x**2) + k[0]**2*q*(2.*k[2]**2*(15. - 34.*x**2) + k[1]**2*(13. - 30.*x**2)) - 1.*(k[1]**2 - 1.*k[2]**2)*q*(k[1]**2*(-2. + 4.*x**2) + k[2]**2*(-15. + 34.*x**2)))*P(k[2])))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[1]**2 + k[2]**2 + q**2 - 1.*k[0]*q*x))*k[2]**2*(k[0]**2 + q**2 - 2.*k[0]*q*x))))/k[1]**2)))/2.718281828459045**(0.16666666666666666*(k[0]**2 + k[1]**2 + k[2]**2)*sigfid**2),(0.006332573977646111*q*((-1.*Fshape(k[2],q,np.sqrt(k[2]**2 + q**2 - 2.*k[2]*q*x))*(2.718281828459045**(k[1]**2*Rfid**2)*k[1]**2*(-1.*k[0]**4*q*(k[2]**2 + q**2 - 2.*k[2]*q*x) + k[2]**2*(k[1]**2 - 1.*k[2]**2)*q*(k[2]**2 + q**2 - 2.*k[2]*q*x) + k[0]**2*(k[1]**2*q*(k[2]**2 + q**2 - 2.*k[2]*q*x) + 2.*k[2]**2*(q**3 + k[2]**3*x - 2.*k[2]*q**2*x - 2.*k[2]**2*q*(-1. + x**2))))*P(k[0]) + 2.718281828459045**(k[0]**2*Rfid**2)*k[0]**2*(-1.*k[1]**4*q*(k[2]**2 + q**2 - 2.*k[2]*q*x) - 1.*k[2]**4*q*(k[2]**2 + q**2 - 2.*k[2]*q*x) + k[0]**2*(k[1]**2 + k[2]**2)*q*(k[2]**2 + q**2 - 2.*k[2]*q*x) + 2.*k[1]**2*k[2]**2*(q**3 + k[2]**3*x - 2.*k[2]*q**2*x - 2.*k[2]**2*q*(-1. + x**2)))*P(k[1])))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[1]**2 + k[2]**2 + q**2 - 1.*k[2]*q*x))*(k[2]**2 + q**2 - 2.*k[2]*q*x)) - (1.*Fshape(k[0],q,np.sqrt(k[0]**2 + q**2 - 2.*k[0]*q*x))*(2.718281828459045**(k[2]**2*Rfid**2)*k[2]**2*(-1.*k[0]**6*q + k[1]**2*(-1.*k[1]**2 + k[2]**2)*q**3 + k[0]**2*(-1.*k[1]**4*q + k[2]**2*q**3 + k[1]**2*q*(k[2]**2 + 2.*q**2)) + 2.*k[0]*k[1]**2*(k[1]**2 - 1.*k[2]**2)*q**2*x - 2.*k[0]**3*(2.*k[1]**2 + k[2]**2)*q**2*x + 2.*k[0]**5*(k[1]**2 + q**2)*x + k[0]**4*q*(k[2]**2 - 1.*q**2 - 4.*k[1]**2*(-1. + x**2)))*P(k[1]) + 2.718281828459045**(k[1]**2*Rfid**2)*k[1]**2*(-1.*k[0]**6*q + k[2]**2*(k[1]**2 - 1.*k[2]**2)*q**3 + k[0]**2*q*(-1.*k[2]**4 + 2.*k[2]**2*q**2 + k[1]**2*(k[2]**2 + q**2)) + 2.*k[0]*k[2]**2*(-1.*k[1]**2 + k[2]**2)*q**2*x - 2.*k[0]**3*(k[1]**2 + 2.*k[2]**2)*q**2*x + 2.*k[0]**5*(k[2]**2 + q**2)*x + k[0]**4*q*(k[1]**2 - 1.*q**2 - 4.*k[2]**2*(-1. + x**2)))*P(k[2])))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[1]**2 + k[2]**2 + q**2 - 1.*k[0]*q*x))*(k[0]**2 + q**2 - 2.*k[0]*q*x)) + (Fshape(k[1],q,np.sqrt(k[1]**2 + q**2 - 2.*k[1]*q*x))*(2.718281828459045**(Rfid**2*(k[1]**2 + k[2]**2 + q**2 - 1.*k[1]*q*x))*k[2]**2*(k[0]**4*q*(k[1]**2 + q**2 - 2.*k[1]*q*x) + k[1]**2*(k[1]**2 - 1.*k[2]**2)*q*(k[1]**2 + q**2 - 2.*k[1]*q*x) - 1.*k[0]**2*(k[2]**2*q**3 + k[1]**2*q*(k[2]**2 + 2.*q**2) + 2.*k[1]**5*x - 4.*k[1]**3*q**2*x - 2.*k[1]*k[2]**2*q**2*x - 4.*k[1]**4*q*(-1. + x**2)))*P(k[0]) + 2.718281828459045**(Rfid**2*(k[0]**2 + k[1]**2 + q**2 - 1.*k[1]*q*x))*k[0]**2*(k[1]**6*q + k[2]**4*q**3 + k[1]**2*k[2]**2*q*(k[2]**2 - 2.*q**2) + 4.*k[1]**3*k[2]**2*q**2*x - 2.*k[1]*k[2]**4*q**2*x - 2.*k[1]**5*(k[2]**2 + q**2)*x - 1.*k[0]**2*(k[1]**2 + k[2]**2)*q*(k[1]**2 + q**2 - 2.*k[1]*q*x) + k[1]**4*q*(q**2 + 4.*k[2]**2*(-1. + x**2)))*P(k[2])))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + 2.*k[1]**2 + k[2]**2 + 2.*q**2 - 2.*k[1]*q*x))*(k[1]**2 + q**2 - 2.*k[1]*q*x))))/(2.718281828459045**(0.16666666666666666*(k[0]**2 + k[1]**2 + k[2]**2)*sigfid**2)*k[0]**2*k[1]**2*k[2]**2),0.),((0.0625*((-8.*Fshape(k[0],k[1],k[2]))/(2.718281828459045**(0.5*(k[0]**2 + k[1]**2 + k[2]**2)*Rfid**2)*(qmax - 1.*qmin)) + (0.10132118364233778*k[0]**2*k[1]*q*x*Fshape(k[1],q,np.sqrt(k[1]**2 + q**2 - 2.*k[1]*q*x))*P(k[0]))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[1]**2 + q**2 - 1.*k[1]*q*x))*(k[1]**2 + q**2 - 2.*k[1]*q*x)) - (0.20264236728467555*k[1]**3*q*x*Fshape(k[1],q,np.sqrt(k[1]**2 + q**2 - 2.*k[1]*q*x))*P(k[0]))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[1]**2 + q**2 - 1.*k[1]*q*x))*(k[1]**2 + q**2 - 2.*k[1]*q*x)) - (0.10132118364233778*k[1]*k[2]**2*q*x*Fshape(k[1],q,np.sqrt(k[1]**2 + q**2 - 2.*k[1]*q*x))*P(k[0]))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[1]**2 + q**2 - 1.*k[1]*q*x))*(k[1]**2 + q**2 - 2.*k[1]*q*x)) + (0.10132118364233778*k[1]**3*(k[1]**2 - 1.*k[2]**2)*q*x*Fshape(k[1],q,np.sqrt(k[1]**2 + q**2 - 2.*k[1]*q*x))*P(k[0]))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[1]**2 + q**2 - 1.*k[1]*q*x))*k[0]**2*(k[1]**2 + q**2 - 2.*k[1]*q*x)) - (0.10132118364233778*k[0]**2*q**2*(-1. + 2.*x**2)*Fshape(k[1],q,np.sqrt(k[1]**2 + q**2 - 2.*k[1]*q*x))*P(k[0]))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[1]**2 + q**2 - 1.*k[1]*q*x))*(k[1]**2 + q**2 - 2.*k[1]*q*x)) + (0.20264236728467555*k[1]**2*q**2*(-1. + 2.*x**2)*Fshape(k[1],q,np.sqrt(k[1]**2 + q**2 - 2.*k[1]*q*x))*P(k[0]))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[1]**2 + q**2 - 1.*k[1]*q*x))*(k[1]**2 + q**2 - 2.*k[1]*q*x)) + (0.10132118364233778*k[2]**2*q**2*(-1. + 2.*x**2)*Fshape(k[1],q,np.sqrt(k[1]**2 + q**2 - 2.*k[1]*q*x))*P(k[0]))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[1]**2 + q**2 - 1.*k[1]*q*x))*(k[1]**2 + q**2 - 2.*k[1]*q*x)) - (0.10132118364233778*k[1]**2*(k[1]**2 - 1.*k[2]**2)*q**2*(-1. + 2.*x**2)*Fshape(k[1],q,np.sqrt(k[1]**2 + q**2 - 2.*k[1]*q*x))*P(k[0]))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[1]**2 + q**2 - 1.*k[1]*q*x))*k[0]**2*(k[1]**2 + q**2 - 2.*k[1]*q*x)) + (0.10132118364233778*k[0]**2*k[2]*q*x*Fshape(k[2],q,np.sqrt(k[2]**2 + q**2 - 2.*k[2]*q*x))*P(k[0]))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[2]**2 + q**2 - 1.*k[2]*q*x))*(k[2]**2 + q**2 - 2.*k[2]*q*x)) - (0.10132118364233778*k[1]**2*k[2]*q*x*Fshape(k[2],q,np.sqrt(k[2]**2 + q**2 - 2.*k[2]*q*x))*P(k[0]))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[2]**2 + q**2 - 1.*k[2]*q*x))*(k[2]**2 + q**2 - 2.*k[2]*q*x)) - (0.20264236728467555*k[2]**3*q*x*Fshape(k[2],q,np.sqrt(k[2]**2 + q**2 - 2.*k[2]*q*x))*P(k[0]))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[2]**2 + q**2 - 1.*k[2]*q*x))*(k[2]**2 + q**2 - 2.*k[2]*q*x)) + (0.10132118364233778*k[2]**3*(-1.*k[1]**2 + k[2]**2)*q*x*Fshape(k[2],q,np.sqrt(k[2]**2 + q**2 - 2.*k[2]*q*x))*P(k[0]))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[2]**2 + q**2 - 1.*k[2]*q*x))*k[0]**2*(k[2]**2 + q**2 - 2.*k[2]*q*x)) - (0.10132118364233778*k[0]**2*q**2*(-1. + 2.*x**2)*Fshape(k[2],q,np.sqrt(k[2]**2 + q**2 - 2.*k[2]*q*x))*P(k[0]))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[2]**2 + q**2 - 1.*k[2]*q*x))*(k[2]**2 + q**2 - 2.*k[2]*q*x)) + (0.10132118364233778*k[1]**2*q**2*(-1. + 2.*x**2)*Fshape(k[2],q,np.sqrt(k[2]**2 + q**2 - 2.*k[2]*q*x))*P(k[0]))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[2]**2 + q**2 - 1.*k[2]*q*x))*(k[2]**2 + q**2 - 2.*k[2]*q*x)) + (0.20264236728467555*k[2]**2*q**2*(-1. + 2.*x**2)*Fshape(k[2],q,np.sqrt(k[2]**2 + q**2 - 2.*k[2]*q*x))*P(k[0]))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[2]**2 + q**2 - 1.*k[2]*q*x))*(k[2]**2 + q**2 - 2.*k[2]*q*x)) - (0.10132118364233778*k[2]**2*(-1.*k[1]**2 + k[2]**2)*q**2*(-1. + 2.*x**2)*Fshape(k[2],q,np.sqrt(k[2]**2 + q**2 - 2.*k[2]*q*x))*P(k[0]))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[2]**2 + q**2 - 1.*k[2]*q*x))*k[0]**2*(k[2]**2 + q**2 - 2.*k[2]*q*x)) - (0.20264236728467555*k[0]**3*q*x*Fshape(k[0],q,np.sqrt(k[0]**2 + q**2 - 2.*k[0]*q*x))*P(k[1]))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[1]**2 + q**2 - 1.*k[0]*q*x))*(k[0]**2 + q**2 - 2.*k[0]*q*x)) + (0.10132118364233778*k[0]**5*q*x*Fshape(k[0],q,np.sqrt(k[0]**2 + q**2 - 2.*k[0]*q*x))*P(k[1]))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[1]**2 + q**2 - 1.*k[0]*q*x))*k[1]**2*(k[0]**2 + q**2 - 2.*k[0]*q*x)) - (0.10132118364233778*k[0]**3*k[2]**2*q*x*Fshape(k[0],q,np.sqrt(k[0]**2 + q**2 - 2.*k[0]*q*x))*P(k[1]))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[1]**2 + q**2 - 1.*k[0]*q*x))*k[1]**2*(k[0]**2 + q**2 - 2.*k[0]*q*x)) + (0.10132118364233778*k[0]*(k[1]**2 - 1.*k[2]**2)*q*x*Fshape(k[0],q,np.sqrt(k[0]**2 + q**2 - 2.*k[0]*q*x))*P(k[1]))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[1]**2 + q**2 - 1.*k[0]*q*x))*(k[0]**2 + q**2 - 2.*k[0]*q*x)) + (0.20264236728467555*k[0]**2*q**2*(-1. + 2.*x**2)*Fshape(k[0],q,np.sqrt(k[0]**2 + q**2 - 2.*k[0]*q*x))*P(k[1]))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[1]**2 + q**2 - 1.*k[0]*q*x))*(k[0]**2 + q**2 - 2.*k[0]*q*x)) - (0.10132118364233778*k[0]**4*q**2*(-1. + 2.*x**2)*Fshape(k[0],q,np.sqrt(k[0]**2 + q**2 - 2.*k[0]*q*x))*P(k[1]))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[1]**2 + q**2 - 1.*k[0]*q*x))*k[1]**2*(k[0]**2 + q**2 - 2.*k[0]*q*x)) + (0.10132118364233778*k[0]**2*k[2]**2*q**2*(-1. + 2.*x**2)*Fshape(k[0],q,np.sqrt(k[0]**2 + q**2 - 2.*k[0]*q*x))*P(k[1]))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[1]**2 + q**2 - 1.*k[0]*q*x))*k[1]**2*(k[0]**2 + q**2 - 2.*k[0]*q*x)) - (0.10132118364233778*(k[1]**2 - 1.*k[2]**2)*q**2*(-1. + 2.*x**2)*Fshape(k[0],q,np.sqrt(k[0]**2 + q**2 - 2.*k[0]*q*x))*P(k[1]))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[1]**2 + q**2 - 1.*k[0]*q*x))*(k[0]**2 + q**2 - 2.*k[0]*q*x)) + (0.10132118364233778*k[1]**2*k[2]*q*x*Fshape(k[2],q,np.sqrt(k[2]**2 + q**2 - 2.*k[2]*q*x))*P(k[1]))/(2.718281828459045**(1.*Rfid**2*(k[1]**2 + k[2]**2 + q**2 - 1.*k[2]*q*x))*(k[2]**2 + q**2 - 2.*k[2]*q*x)) - (0.20264236728467555*k[2]**3*q*x*Fshape(k[2],q,np.sqrt(k[2]**2 + q**2 - 2.*k[2]*q*x))*P(k[1]))/(2.718281828459045**(1.*Rfid**2*(k[1]**2 + k[2]**2 + q**2 - 1.*k[2]*q*x))*(k[2]**2 + q**2 - 2.*k[2]*q*x)) + (0.10132118364233778*k[2]**5*q*x*Fshape(k[2],q,np.sqrt(k[2]**2 + q**2 - 2.*k[2]*q*x))*P(k[1]))/(2.718281828459045**(1.*Rfid**2*(k[1]**2 + k[2]**2 + q**2 - 1.*k[2]*q*x))*k[1]**2*(k[2]**2 + q**2 - 2.*k[2]*q*x)) - (0.10132118364233778*k[0]**2*k[2]*(k[1]**2 + k[2]**2)*q*x*Fshape(k[2],q,np.sqrt(k[2]**2 + q**2 - 2.*k[2]*q*x))*P(k[1]))/(2.718281828459045**(1.*Rfid**2*(k[1]**2 + k[2]**2 + q**2 - 1.*k[2]*q*x))*k[1]**2*(k[2]**2 + q**2 - 2.*k[2]*q*x)) - (0.10132118364233778*k[1]**2*q**2*(-1. + 2.*x**2)*Fshape(k[2],q,np.sqrt(k[2]**2 + q**2 - 2.*k[2]*q*x))*P(k[1]))/(2.718281828459045**(1.*Rfid**2*(k[1]**2 + k[2]**2 + q**2 - 1.*k[2]*q*x))*(k[2]**2 + q**2 - 2.*k[2]*q*x)) + (0.20264236728467555*k[2]**2*q**2*(-1. + 2.*x**2)*Fshape(k[2],q,np.sqrt(k[2]**2 + q**2 - 2.*k[2]*q*x))*P(k[1]))/(2.718281828459045**(1.*Rfid**2*(k[1]**2 + k[2]**2 + q**2 - 1.*k[2]*q*x))*(k[2]**2 + q**2 - 2.*k[2]*q*x)) - (0.10132118364233778*k[2]**4*q**2*(-1. + 2.*x**2)*Fshape(k[2],q,np.sqrt(k[2]**2 + q**2 - 2.*k[2]*q*x))*P(k[1]))/(2.718281828459045**(1.*Rfid**2*(k[1]**2 + k[2]**2 + q**2 - 1.*k[2]*q*x))*k[1]**2*(k[2]**2 + q**2 - 2.*k[2]*q*x)) + (0.10132118364233778*k[0]**2*(k[1]**2 + k[2]**2)*q**2*(-1. + 2.*x**2)*Fshape(k[2],q,np.sqrt(k[2]**2 + q**2 - 2.*k[2]*q*x))*P(k[1]))/(2.718281828459045**(1.*Rfid**2*(k[1]**2 + k[2]**2 + q**2 - 1.*k[2]*q*x))*k[1]**2*(k[2]**2 + q**2 - 2.*k[2]*q*x)) - (0.20264236728467555*k[0]**3*q*x*Fshape(k[0],q,np.sqrt(k[0]**2 + q**2 - 2.*k[0]*q*x))*P(k[2]))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[2]**2 + q**2 - 1.*k[0]*q*x))*(k[0]**2 + q**2 - 2.*k[0]*q*x)) + (0.10132118364233778*k[0]**5*q*x*Fshape(k[0],q,np.sqrt(k[0]**2 + q**2 - 2.*k[0]*q*x))*P(k[2]))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[2]**2 + q**2 - 1.*k[0]*q*x))*k[2]**2*(k[0]**2 + q**2 - 2.*k[0]*q*x)) - (0.10132118364233778*k[0]**3*k[1]**2*q*x*Fshape(k[0],q,np.sqrt(k[0]**2 + q**2 - 2.*k[0]*q*x))*P(k[2]))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[2]**2 + q**2 - 1.*k[0]*q*x))*k[2]**2*(k[0]**2 + q**2 - 2.*k[0]*q*x)) + (0.10132118364233778*k[0]*(-1.*k[1]**2 + k[2]**2)*q*x*Fshape(k[0],q,np.sqrt(k[0]**2 + q**2 - 2.*k[0]*q*x))*P(k[2]))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[2]**2 + q**2 - 1.*k[0]*q*x))*(k[0]**2 + q**2 - 2.*k[0]*q*x)) + (0.20264236728467555*k[0]**2*q**2*(-1. + 2.*x**2)*Fshape(k[0],q,np.sqrt(k[0]**2 + q**2 - 2.*k[0]*q*x))*P(k[2]))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[2]**2 + q**2 - 1.*k[0]*q*x))*(k[0]**2 + q**2 - 2.*k[0]*q*x)) - (0.10132118364233778*k[0]**4*q**2*(-1. + 2.*x**2)*Fshape(k[0],q,np.sqrt(k[0]**2 + q**2 - 2.*k[0]*q*x))*P(k[2]))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[2]**2 + q**2 - 1.*k[0]*q*x))*k[2]**2*(k[0]**2 + q**2 - 2.*k[0]*q*x)) + (0.10132118364233778*k[0]**2*k[1]**2*q**2*(-1. + 2.*x**2)*Fshape(k[0],q,np.sqrt(k[0]**2 + q**2 - 2.*k[0]*q*x))*P(k[2]))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[2]**2 + q**2 - 1.*k[0]*q*x))*k[2]**2*(k[0]**2 + q**2 - 2.*k[0]*q*x)) + (0.10132118364233778*(k[1]**2 - 1.*k[2]**2)*q**2*(-1. + 2.*x**2)*Fshape(k[0],q,np.sqrt(k[0]**2 + q**2 - 2.*k[0]*q*x))*P(k[2]))/(2.718281828459045**(1.*Rfid**2*(k[0]**2 + k[2]**2 + q**2 - 1.*k[0]*q*x))*(k[0]**2 + q**2 - 2.*k[0]*q*x)) - (0.20264236728467555*k[1]**3*q*x*Fshape(k[1],q,np.sqrt(k[1]**2 + q**2 - 2.*k[1]*q*x))*P(k[2]))/(2.718281828459045**(1.*Rfid**2*(k[1]**2 + k[2]**2 + q**2 - 1.*k[1]*q*x))*(k[1]**2 + q**2 - 2.*k[1]*q*x)) + (0.10132118364233778*k[1]**5*q*x*Fshape(k[1],q,np.sqrt(k[1]**2 + q**2 - 2.*k[1]*q*x))*P(k[2]))/(2.718281828459045**(1.*Rfid**2*(k[1]**2 + k[2]**2 + q**2 - 1.*k[1]*q*x))*k[2]**2*(k[1]**2 + q**2 - 2.*k[1]*q*x)) + (0.10132118364233778*k[1]*k[2]**2*q*x*Fshape(k[1],q,np.sqrt(k[1]**2 + q**2 - 2.*k[1]*q*x))*P(k[2]))/(2.718281828459045**(1.*Rfid**2*(k[1]**2 + k[2]**2 + q**2 - 1.*k[1]*q*x))*(k[1]**2 + q**2 - 2.*k[1]*q*x)) - (0.10132118364233778*k[0]**2*k[1]*(k[1]**2 + k[2]**2)*q*x*Fshape(k[1],q,np.sqrt(k[1]**2 + q**2 - 2.*k[1]*q*x))*P(k[2]))/(2.718281828459045**(1.*Rfid**2*(k[1]**2 + k[2]**2 + q**2 - 1.*k[1]*q*x))*k[2]**2*(k[1]**2 + q**2 - 2.*k[1]*q*x)) + (0.20264236728467555*k[1]**2*q**2*(-1. + 2.*x**2)*Fshape(k[1],q,np.sqrt(k[1]**2 + q**2 - 2.*k[1]*q*x))*P(k[2]))/(2.718281828459045**(1.*Rfid**2*(k[1]**2 + k[2]**2 + q**2 - 1.*k[1]*q*x))*(k[1]**2 + q**2 - 2.*k[1]*q*x)) - (0.10132118364233778*k[1]**4*q**2*(-1. + 2.*x**2)*Fshape(k[1],q,np.sqrt(k[1]**2 + q**2 - 2.*k[1]*q*x))*P(k[2]))/(2.718281828459045**(1.*Rfid**2*(k[1]**2 + k[2]**2 + q**2 - 1.*k[1]*q*x))*k[2]**2*(k[1]**2 + q**2 - 2.*k[1]*q*x)) - (0.10132118364233778*k[2]**2*q**2*(-1. + 2.*x**2)*Fshape(k[1],q,np.sqrt(k[1]**2 + q**2 - 2.*k[1]*q*x))*P(k[2]))/(2.718281828459045**(1.*Rfid**2*(k[1]**2 + k[2]**2 + q**2 - 1.*k[1]*q*x))*(k[1]**2 + q**2 - 2.*k[1]*q*x)) + (0.10132118364233778*k[0]**2*(k[1]**2 + k[2]**2)*q**2*(-1. + 2.*x**2)*Fshape(k[1],q,np.sqrt(k[1]**2 + q**2 - 2.*k[1]*q*x))*P(k[2]))/(2.718281828459045**(1.*Rfid**2*(k[1]**2 + k[2]**2 + q**2 - 1.*k[1]*q*x))*k[2]**2*(k[1]**2 + q**2 - 2.*k[1]*q*x))))/2.718281828459045**(0.16666666666666666*(k[0]**2 + k[1]**2 + k[2]**2)*sigfid**2),0.,0.))))[powerfnl][powerb1][powerb2]


###### bispectrum B full gauss - ( B simple gauss + B NG ) at one loop ######
#def Bshift_integrand(k,q,x,(fnlfid ,b10fid, b20fid, b01fid, b11fid, b02fid, chi1fid, w10fid, sigfid, Rfid),fnlfit,b10fit,b20fit):
#    return (0.0006377551020408163*(-0.10132118364233778*(1. + b10fit)*fnlfit*q*((((-2.*((5. + 7.*b10fit)*k[0]**4 + (k[1]**2 - 1.*k[2]**2)*((5. + 7.*b10fit)*k[1]**2 + 2.*k[2]**2) - 1.*k[0]**2*(2.*(5. + 7.*b10fit + 7.*b20fit)*k[1]**2 + (3. + 7.*b10fit)*k[2]**2))*(7.*b20fit*q**3 + 7.*(1. + b10fit)*k[1]**3*x - 14.*b20fit*k[1]*q**2*x + k[1]**2*q*(3. + 7.*b20fit - 10.*x**2 + b10fit*(7. - 14.*x**2)))*Fshape(k[1],q,np.sqrt(k[1]**2 + q**2 - 2.*k[1]*q*x)))/(2.718281828459045**(0.5*Rfid**2*(k[0]**2 + 2.*(k[1]**2 + q**2 - 1.*k[1]*q*x)))*k[1]**2*(k[1]**2 + q**2 - 2.*k[1]*q*x)) + ((-2.*(5. + 7.*b10fit)*k[0]**4 + 2.*(k[1]**2 - 1.*k[2]**2)*(2.*k[1]**2 + (5. + 7.*b10fit)*k[2]**2) + 2.*k[0]**2*((3. + 7.*b10fit)*k[1]**2 + 2.*(5. + 7.*b10fit + 7.*b20fit)*k[2]**2))*(7.*b20fit*q**3 + 7.*(1. + b10fit)*k[2]**3*x - 14.*b20fit*k[2]*q**2*x + k[2]**2*q*(3. + 7.*b20fit - 10.*x**2 + b10fit*(7. - 14.*x**2)))*Fshape(k[2],q,np.sqrt(k[2]**2 + q**2 - 2.*k[2]*q*x)))/(2.718281828459045**(0.5*Rfid**2*(k[0]**2 + 2.*(k[2]**2 + q**2 - 1.*k[2]*q*x)))*k[2]**2*(k[2]**2 + q**2 - 2.*k[2]*q*x)))*P(k[0]))/(2.718281828459045**(0.5*k[0]**2*Rfid**2)*k[0]**2) + (((-2.*((5. + 7.*b10fit)*k[0]**4 + (k[1]**2 - 1.*k[2]**2)*((5. + 7.*b10fit)*k[1]**2 + 2.*k[2]**2) - 1.*k[0]**2*(2.*(5. + 7.*b10fit + 7.*b20fit)*k[1]**2 + (3. + 7.*b10fit)*k[2]**2))*(7.*b20fit*q**3 + 7.*(1. + b10fit)*k[0]**3*x - 14.*b20fit*k[0]*q**2*x + k[0]**2*q*(3. + 7.*b20fit - 10.*x**2 + b10fit*(7. - 14.*x**2)))*Fshape(k[0],q,np.sqrt(k[0]**2 + q**2 - 2.*k[0]*q*x)))/(2.718281828459045**(0.5*Rfid**2*(2.*k[0]**2 + k[1]**2 + 2.*q**2 - 2.*k[0]*q*x))*k[0]**2*(k[0]**2 + q**2 - 2.*k[0]*q*x)) + (2.*(2.*k[0]**4 - 1.*(5. + 7.*b10fit)*k[1]**4 + 2.*(5. + 7.*b10fit + 7.*b20fit)*k[1]**2*k[2]**2 - 1.*(5. + 7.*b10fit)*k[2]**4 + (3. + 7.*b10fit)*k[0]**2*(k[1]**2 + k[2]**2))*(7.*b20fit*q**3 + 7.*(1. + b10fit)*k[2]**3*x - 14.*b20fit*k[2]*q**2*x + k[2]**2*q*(3. + 7.*b20fit - 10.*x**2 + b10fit*(7. - 14.*x**2)))*Fshape(k[2],q,np.sqrt(k[2]**2 + q**2 - 2.*k[2]*q*x)))/(2.718281828459045**(0.5*Rfid**2*(k[1]**2 + 2.*(k[2]**2 + q**2 - 1.*k[2]*q*x)))*k[2]**2*(k[2]**2 + q**2 - 2.*k[2]*q*x)))*P(k[1]))/(2.718281828459045**(0.5*k[1]**2*Rfid**2)*k[1]**2) + ((((-2.*(5. + 7.*b10fit)*k[0]**4 + 2.*(k[1]**2 - 1.*k[2]**2)*(2.*k[1]**2 + (5. + 7.*b10fit)*k[2]**2) + 2.*k[0]**2*((3. + 7.*b10fit)*k[1]**2 + 2.*(5. + 7.*b10fit + 7.*b20fit)*k[2]**2))*(7.*b20fit*q**3 + 7.*(1. + b10fit)*k[0]**3*x - 14.*b20fit*k[0]*q**2*x + k[0]**2*q*(3. + 7.*b20fit - 10.*x**2 + b10fit*(7. - 14.*x**2)))*Fshape(k[0],q,np.sqrt(k[0]**2 + q**2 - 2.*k[0]*q*x)))/(2.718281828459045**(0.5*Rfid**2*(2.*k[0]**2 + k[2]**2 + 2.*q**2 - 2.*k[0]*q*x))*k[0]**2*(k[0]**2 + q**2 - 2.*k[0]*q*x)) + (2.*(2.*k[0]**4 - 1.*(5. + 7.*b10fit)*k[1]**4 + 2.*(5. + 7.*b10fit + 7.*b20fit)*k[1]**2*k[2]**2 - 1.*(5. + 7.*b10fit)*k[2]**4 + (3. + 7.*b10fit)*k[0]**2*(k[1]**2 + k[2]**2))*(7.*b20fit*q**3 + 7.*(1. + b10fit)*k[1]**3*x - 14.*b20fit*k[1]*q**2*x + k[1]**2*q*(3. + 7.*b20fit - 10.*x**2 + b10fit*(7. - 14.*x**2)))*Fshape(k[1],q,np.sqrt(k[1]**2 + q**2 - 2.*k[1]*q*x)))/(2.718281828459045**(0.5*Rfid**2*(2.*k[1]**2 + k[2]**2 + 2.*q**2 - 2.*k[1]*q*x))*k[1]**2*(k[1]**2 + q**2 - 2.*k[1]*q*x)))*P(k[2]))/(2.718281828459045**(0.5*k[2]**2*Rfid**2)*k[2]**2)) - (28.*(1. + b10fit)**2*((28.*(1. + b10fit)*fnlfit*Fshape(k[0],k[1],k[2]))/2.718281828459045**(0.5*(k[0]**2 + k[1]**2 + k[2]**2)*Rfid**2) - (2.*((5. + 7.*b10fit)*k[0]**4 + (k[1]**2 - 1.*k[2]**2)*((5. + 7.*b10fit)*k[1]**2 + 2.*k[2]**2) - 1.*k[0]**2*(2.*(5. + 7.*b10fit + 7.*b20fit)*k[1]**2 + (3. + 7.*b10fit)*k[2]**2))*P(k[0])*P(k[1]))/(2.718281828459045**(1.*(k[0]**2 + k[1]**2)*Rfid**2)*k[0]**2*k[1]**2) + ((-2.*(5. + 7.*b10fit)*k[0]**4 + 2.*(k[1]**2 - 1.*k[2]**2)*(2.*k[1]**2 + (5. + 7.*b10fit)*k[2]**2) + 2.*k[0]**2*((3. + 7.*b10fit)*k[1]**2 + 2.*(5. + 7.*b10fit + 7.*b20fit)*k[2]**2))*P(k[0])*P(k[2]))/(2.718281828459045**(1.*(k[0]**2 + k[2]**2)*Rfid**2)*k[0]**2*k[2]**2) + (2.*(2.*k[0]**4 - 1.*(5. + 7.*b10fit)*k[1]**4 + 2.*(5. + 7.*b10fit + 7.*b20fit)*k[1]**2*k[2]**2 - 1.*(5. + 7.*b10fit)*k[2]**4 + (3. + 7.*b10fit)*k[0]**2*(k[1]**2 + k[2]**2))*P(k[1])*P(k[2]))/(2.718281828459045**(1.*(k[1]**2 + k[2]**2)*Rfid**2)*k[1]**2*k[2]**2)))/(qmax - 1.*qmin) + (28.*(((1. + b10fid + b01fid*k[0]**2)*(1. + b10fid + b01fid*k[1]**2)*(-2.*(k[1]**2 - 1.*k[2]**2)*((5. + 7.*b10fid)*k[1]**2 + 7.*b01fid*k[1]**4 + 2.*k[2]**2) - 7.*k[0]**6*(2.*b01fid - 3.*k[1]**2*w10fid) - 2.*k[0]**4*(5. + 7.*b10fid - 14.*b11fid*k[1]**2 - 14.*chi1fid*k[1]**2 - 14.*b02fid*k[1]**4 - 7.*b01fid*(k[1]**2 + k[2]**2) - 7.*k[1]**4*w10fid + 21.*k[1]**2*k[2]**2*w10fid) + k[0]**2*(2.*(3. + 7.*b10fid)*k[2]**2 + 21.*k[1]**6*w10fid + 14.*k[1]**4*(b01fid + 2.*b11fid + 2.*chi1fid - 3.*k[2]**2*w10fid) + k[1]**2*(20. + 28.*b10fid + 28.*b20fid - 28.*chi1fid*k[2]**2 + 21.*k[2]**4*w10fid)))*P(k[0])*P(k[1]))/(2.718281828459045**(1.*(k[0]**2 + k[1]**2)*Rfid**2)*k[0]**2*k[1]**2) + ((1. + b10fid + b01fid*k[0]**2)*(1. + b10fid + b01fid*k[2]**2)*(2.*(k[1]**2 - 1.*k[2]**2)*(2.*k[1]**2 + k[2]**2*(5. + 7.*b10fid + 7.*b01fid*k[2]**2)) - 7.*k[0]**6*(2.*b01fid - 3.*k[2]**2*w10fid) - 2.*k[0]**4*(5. + 7.*b10fid - 14.*b11fid*k[2]**2 - 14.*chi1fid*k[2]**2 - 14.*b02fid*k[2]**4 - 7.*b01fid*(k[1]**2 + k[2]**2) + 21.*k[1]**2*k[2]**2*w10fid - 7.*k[2]**4*w10fid) + k[0]**2*(21.*k[1]**4*k[2]**2*w10fid + 2.*k[1]**2*(3. + 7.*b10fid - 14.*chi1fid*k[2]**2 - 21.*k[2]**4*w10fid) + k[2]**2*(20. + 28.*b10fid + 28.*b20fid + 14.*b01fid*k[2]**2 + 28.*b11fid*k[2]**2 + 28.*chi1fid*k[2]**2 + 21.*k[2]**4*w10fid)))*P(k[0])*P(k[2]))/(2.718281828459045**(1.*(k[0]**2 + k[2]**2)*Rfid**2)*k[0]**2*k[2]**2) + ((1. + b10fid + b01fid*k[1]**2)*(1. + b10fid + b01fid*k[2]**2)*(-2.*k[2]**4*(5. + 7.*b10fid + 7.*b01fid*k[2]**2) - 7.*k[1]**6*(2.*b01fid - 3.*k[2]**2*w10fid) + k[0]**4*(4. + 21.*k[1]**2*k[2]**2*w10fid) + 2.*k[1]**4*(-5. - 7.*b10fid + 7.*b01fid*k[2]**2 + 14.*b11fid*k[2]**2 + 14.*chi1fid*k[2]**2 + 14.*b02fid*k[2]**4 + 7.*k[2]**4*w10fid) + k[1]**2*k[2]**2*(20. + 28.*b10fid + 28.*b20fid + 14.*b01fid*k[2]**2 + 28.*b11fid*k[2]**2 + 28.*chi1fid*k[2]**2 + 21.*k[2]**4*w10fid) + 2.*k[0]**2*(k[2]**2*(3. + 7.*b10fid + 7.*b01fid*k[2]**2) + 7.*k[1]**4*(b01fid - 3.*k[2]**2*w10fid) + k[1]**2*(3. + 7.*b10fid - 14.*chi1fid*k[2]**2 - 21.*k[2]**4*w10fid)))*P(k[1])*P(k[2]))/(2.718281828459045**(1.*(k[1]**2 + k[2]**2)*Rfid**2)*k[1]**2*k[2]**2)))/(qmax - 1.*qmin)))/2.718281828459045**(0.16666666666666666*(k[0]**2 + k[1]**2 + k[2]**2)*sigfid**2)
